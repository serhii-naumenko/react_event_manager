{"version":3,"sources":["images/points.svg","images/plus.svg","images/pencil.svg","images/cloud.svg","images/can.svg","redux/reduser.ts","components/CorrectWindow/CorrectWindow.tsx","components/GroupEventsButtons/GroupEventsButtons.tsx","images/logo.svg","images/arrow.svg","api.ts","App.tsx","redux/store.ts","index.tsx"],"names":["events","id","title","time","isPublished","initialState","visibleEvents","chosenEvent","chosenId","isChosenPublished","occasionReducer","createSlice","name","reducers","addOccasion","state","action","push","payload","getVisibleOccasions","getchosenOccasion","exactEvent","find","occasion","updateOcasions","event","removeOccasion","filter","changeIsPublishedOccasion","chooseIdOccasion","choseOccasionToPublish","selectors","actions","reducer","CorrectWindow","idOfEvent","useSelector","loadedEvents","choosenToPublish","dispatch","useDispatch","handlerChangePublished","useCallback","chosenIdEvent","allEvents","newEventsToPrint","visEvent","className","type","src","pencil","alt","onClick","cloud","can","months","GroupEventsButtons","isPublishList","useState","countMenu","setCountMenu","prevChosenId","setPrevChosenId","printDate","Date","toLocaleString","timeZone","console","log","handlerPrintPublish","choiceOfPublic","eventsToPrint","classNames","plus","map","oneEvent","handlerOpenMenu","ellipsis","slice","response","timezones","App","nameOfTimeZone","setNameOfTimeZone","isChosen","setIsChosen","handlerHiddenSelector","handlerTimeZones","picLogo","picArrow","elementOfResponse","hidden","value","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7e68fb3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/points.f2f4133e.svg\";","export default __webpack_public_path__ + \"static/media/plus.ca25056c.svg\";","export default __webpack_public_path__ + \"static/media/pencil.b7947a66.svg\";","export default __webpack_public_path__ + \"static/media/cloud.152768d7.svg\";","export default __webpack_public_path__ + \"static/media/can.d580c6b2.svg\";","import { createSlice } from '@reduxjs/toolkit';\nimport { Occasion } from '../OccasionType';\n\nconst events: Occasion[] = [\n  {\n    id: 0,\n    title: 'Lorem ipsum dolor sit amet asdfafd',\n    time: '2022-04-27T07:07:08.350Z',\n    isPublished: false,\n  },\n  {\n    id: 1,\n    title: 'Lorem ipsum dolor sit amet 2222',\n    time: '2022-06-27T07:07:09.350Z',\n    isPublished: false,\n  },\n  {\n    id: 2,\n    title: 'Lorem ipsum dolor sit amet 3333',\n    time: '2022-08-27T07:07:10.350Z',\n    isPublished: false,\n  },\n];\n\ninterface InitialState {\n  events: Occasion[],\n  visibleEvents: Occasion[] | [],\n  chosenEvent: Occasion | {},\n  chosenId: number,\n  isChosenPublished: boolean,\n}\n\nconst initialState: InitialState = {\n  events,\n  visibleEvents: events,\n  chosenEvent: {},\n  chosenId: -1,\n  isChosenPublished: false,\n};\n\nconst occasionReducer = createSlice({\n  name: 'occasion',\n  initialState,\n  reducers: {\n    addOccasion: (state, action) => {\n      state.events.push(action.payload);\n\n      return state;\n    },\n\n    getVisibleOccasions: (state, action) => {\n      return {\n        ...state,\n        visibleEvents: action.payload,\n      };\n    },\n\n    getchosenOccasion: (state, action) => {\n      const exactEvent = state.events\n        .find((occasion) => occasion.id === action.payload);\n\n      if (exactEvent) {\n        return {\n          ...state,\n          chosenEvent: exactEvent,\n        };\n      }\n\n      return state;\n    },\n\n    updateOcasions: (state, action) => {\n      return {\n        ...state,\n        event: action.payload,\n      };\n    },\n\n    // removeOccasion: (state, action) => {\n    //   return {\n    //     ...state,\n    //     events: state.events.filter((occasion) => occasion.id !== action.payload),\n    //   };\n    // },\n    removeOccasion: (state, action) => {\n      state.events.filter((occasion) => occasion.id !== action.payload);\n\n      return state;\n    },\n\n    changeIsPublishedOccasion: (state, action) => {\n      const exactEvent = state.events.find((occasion) => {\n        return occasion.id === action.payload;\n      });\n\n      if (exactEvent) {\n        exactEvent.isPublished = !exactEvent.isPublished;\n      }\n\n      return state;\n    },\n\n    chooseIdOccasion: (state, action) => {\n      return {\n        ...state,\n        chosenId: action.payload,\n      };\n    },\n\n    choseOccasionToPublish: (state, action) => {\n      return {\n        ...state,\n        isChosenPublished: action.payload,\n      };\n    },\n  },\n});\n\nexport const selectors = {\n  loadedOccasions: (state: InitialState) => state.events,\n  getVisibleOccasons: (state: InitialState) => state.visibleEvents,\n  getChosenOccasion: (state: InitialState) => state.chosenEvent,\n  getChosenId: (state: InitialState) => state.chosenId,\n  getChosenOccasionsPublished: (state: InitialState) => state.isChosenPublished,\n};\n\nexport const {\n  addOccasion,\n  getVisibleOccasions,\n  getchosenOccasion,\n  updateOcasions,\n  removeOccasion,\n  chooseIdOccasion,\n  choseOccasionToPublish,\n  changeIsPublishedOccasion,\n} = occasionReducer.actions;\n\nexport const { reducer } = occasionReducer;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './CorrectWindow.scss';\nimport pencil from '../../images/pencil.svg';\nimport cloud from '../../images/cloud.svg';\nimport can from '../../images/can.svg';\nimport {\n  changeIsPublishedOccasion,\n  chooseIdOccasion,\n  getVisibleOccasions,\n  selectors,\n  updateOcasions,\n} from '../../redux/reduser';\n\nexport const CorrectWindow: React.FC = () => {\n  const idOfEvent = useSelector(selectors.getChosenId);\n  const loadedEvents = useSelector(selectors.loadedOccasions);\n  const choosenToPublish = useSelector(selectors.getChosenOccasionsPublished);\n  const chosenEvent = useSelector(selectors.getChosenOccasion);\n  const visibleEvents = useSelector(selectors.getVisibleOccasons);\n  const dispatch = useDispatch();\n\n  const handlerChangePublished = useCallback(() => {\n    const chosenIdEvent = idOfEvent;\n    const allEvents = loadedEvents;\n    const exactEvent = chosenEvent;\n    const newEventsToPrint = visibleEvents.filter((visEvent) => visEvent.id !== chosenIdEvent);\n\n    if ('isPublished' in exactEvent) {\n      if (exactEvent.isPublished) {\n        allEvents[chosenIdEvent].isPublished = false;\n      } else {\n        allEvents[chosenIdEvent].isPublished = true;\n      }\n    }\n\n    dispatch(getVisibleOccasions(newEventsToPrint));\n    dispatch(updateOcasions(allEvents));\n    dispatch(changeIsPublishedOccasion(chosenIdEvent));\n    dispatch(chooseIdOccasion(-1));\n  }, [idOfEvent, loadedEvents, chosenEvent]);\n\n  return (\n    <div className=\"CorrectWindow__window-add\">\n      <button\n        type=\"button\"\n        className=\"CorrectWindow__window-section\"\n      >\n        <img\n          src={pencil}\n          alt=\"pencil\"\n          className=\"CorrectWindow__correct-image\"\n        />\n        <p className=\"CorrectWindow__edit\">\n          Edit\n        </p>\n      </button>\n      <button\n        type=\"button\"\n        className=\"CorrectWindow__window-section\n        CorrectWindow__window-section-middle\"\n        onClick={handlerChangePublished}\n      >\n        <img\n          src={cloud}\n          alt=\"cloud of download\"\n          className=\"CorrectWindow__correct-image\"\n        />\n        <p className=\"CorrectWindow__edit\">\n          {choosenToPublish ? 'Unpublish' : 'Publish'}\n        </p>\n      </button>\n      <button\n        type=\"button\"\n        className=\"CorrectWindow__window-section\"\n      >\n        <img\n          src={can}\n          alt=\"garbage can\"\n          className=\"CorrectWindow__correct-image\"\n        />\n        <p\n          className=\"CorrectWindow__edit\n          CorrectWindow__edit-delete\"\n        >\n          Delete\n        </p>\n      </button>\n    </div>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport './GroupEventsButtons.scss';\nimport ellipsis from '../../images/points.svg';\nimport plus from '../../images/plus.svg';\nimport { CorrectWindow } from '../CorrectWindow';\nimport {\n  chooseIdOccasion,\n  choseOccasionToPublish,\n  getVisibleOccasions,\n  selectors,\n} from '../../redux/reduser';\nimport { Occasion } from '../../OccasionType';\n\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nexport const GroupEventsButtons: React.FC = () => {\n  const allEvents = useSelector(selectors.loadedOccasions);\n  const chosenId = useSelector(selectors.getChosenId);\n  const chosenEvent = useSelector(selectors.getChosenOccasion);\n  const visibleEvents = useSelector(selectors.getVisibleOccasons);\n  const isPublishList = useSelector(selectors.getChosenOccasionsPublished);\n  const dispatch = useDispatch();\n  const [countMenu, setCountMenu] = useState(0);\n  const [prevChosenId, setPrevChosenId] = useState(-2);\n  // const printDate = new Date(Date.UTC(2022, 6, 5, 23, 30));\n  const printDate = new Date().toLocaleString('en-US', { timeZone: 'UTC' });\n\n  // eslint-disable-next-line no-console\n  console.log(printDate);\n\n  const handlerPrintPublish = useCallback(() => {\n    const choiceOfPublic = isPublishList;\n    const eventsToPrint = allEvents\n      .filter((visEvent) => visEvent.isPublished === !choiceOfPublic);\n\n    dispatch(choseOccasionToPublish(!choiceOfPublic));\n    dispatch(getVisibleOccasions(eventsToPrint));\n    setCountMenu(0);\n  }, [isPublishList, allEvents, visibleEvents]);\n\n  const handlerOpenMenu = (idOfEvent: number) => {\n    const exactEvent = chosenEvent;\n    const count = countMenu;\n    const prevChoice = prevChosenId;\n\n    if (count === 1 && prevChoice === idOfEvent) {\n      setCountMenu(0);\n    } else {\n      setCountMenu(1);\n    }\n\n    if ('isPublished' in exactEvent) {\n      if (exactEvent.isPublished) {\n        dispatch(choseOccasionToPublish(false));\n      } else {\n        dispatch(choseOccasionToPublish(true));\n      }\n    }\n\n    dispatch(chooseIdOccasion(idOfEvent));\n    setPrevChosenId(idOfEvent);\n  };\n\n  return (\n    <div className=\"GroupEventsButtons\">\n      <div className=\"GroupEventsButtons__visibility\">\n        <div className=\"GroupEventsButtons__published\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'GroupEventsButtons__switch-button',\n              {\n                'GroupEventsButtons__switch-button-isActive': isPublishList,\n              },\n            )}\n            onClick={handlerPrintPublish}\n          >\n            Published\n          </button>\n        </div>\n        <div className=\"GroupEventsButtons__unpublished\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'GroupEventsButtons__switch-button',\n              {\n                'GroupEventsButtons__switch-button-isActive': !isPublishList,\n              },\n            )}\n            onClick={handlerPrintPublish}\n          >\n            Unpublished\n          </button>\n        </div>\n      </div>\n      <button\n        className=\"GroupEventsButtons__add-button\"\n        type=\"button\"\n      >\n        <img src={plus} alt=\"plus\" className=\"GroupEventsButtons__plus\" />\n        Add Event\n      </button>\n\n      <ul className=\"GroupEventsButtons__list\">\n        {visibleEvents.map((oneEvent: Occasion) => (\n          <li\n            className=\"GroupEventsButtons__item\"\n            key={oneEvent.id}\n          >\n            <div className=\"GroupEventsButtons__item-main\">\n              <p className=\"GroupEventsButtons__item-text\">\n                {oneEvent.title}\n              </p>\n              <div className=\"GroupEventsButtons__bottomGroup\">\n                <button\n                  className=\"GroupEventsButtons__points\"\n                  type=\"button\"\n                  title=\"opener dicription of event\"\n                  onClick={() => handlerOpenMenu(oneEvent.id)}\n                >\n                  <img\n                    src={ellipsis}\n                    alt=\"sign to select discription of event\"\n                    className=\"GroupEventsButtons__point\"\n                  />\n                </button>\n                <p className=\"GroupEventsButtons__time\">\n                  {`${oneEvent.time.slice(11, 16)} am - ${oneEvent.time.slice(8, 10)}\n                  ${months[+oneEvent.time.slice(5, 7)]} ${oneEvent.time.slice(0, 4)}`}\n                </p>\n              </div>\n            </div>\n            {(chosenId === oneEvent.id)\n              && countMenu === 1\n              && (\n                <CorrectWindow />\n              )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.80032a17.svg\";","export default __webpack_public_path__ + \"static/media/arrow.24e95959.svg\";","import { timezones } from './timeZones.json';\n\nexport const response = timezones;\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { GroupEventsButtons } from './components/GroupEventsButtons';\nimport picLogo from './images/logo.svg';\nimport picArrow from './images/arrow.svg';\nimport { response } from './api';\n\nexport const App: React.FC = () => {\n  const [nameOfTimeZone, setNameOfTimeZone] = useState('choose a time zone');\n  const [isChosen, setIsChosen] = useState(true);\n\n  const handlerHiddenSelector = useCallback(() => {\n    const openSelector = isChosen;\n\n    setIsChosen(!openSelector);\n  }, [isChosen]);\n\n  const handlerTimeZones = useCallback((timeZone) => {\n    setNameOfTimeZone(timeZone);\n    setIsChosen(true);\n  }, [nameOfTimeZone]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__container-out\">\n        <h1 className=\"App__title\">\n          Event Manager\n        </h1>\n        <div className=\"App__container-in\">\n          <div className=\"App__logo\">\n            <img src={picLogo} alt=\"logo\" className=\"App__logo-image\" />\n            <p className=\"App__logo-text\">\n              Select Timezone\n            </p>\n          </div>\n          <div className=\"App__selector\">\n            <div className=\"App__selector-container\">\n              <button\n                className=\"App__choice\"\n                type=\"button\"\n                onClick={handlerHiddenSelector}\n              >\n                <img src={picArrow} alt=\"pointer on select\" className=\"App__choice-image\" />\n                {nameOfTimeZone}\n              </button>\n              {response.map((elementOfResponse) => (\n                <button\n                  className=\"App__choice\"\n                  type=\"button\"\n                  key={elementOfResponse.id}\n                  hidden={isChosen}\n                  onClick={() => handlerTimeZones(elementOfResponse.value)}\n                >\n                  {elementOfResponse.value}\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n      <GroupEventsButtons />\n    </div>\n  );\n};\n","import { configureStore } from '@reduxjs/toolkit';\nimport { reducer } from './reduser';\n\nconst store = configureStore({ reducer });\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './styles/main.scss';\nimport { App } from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}