{"version":3,"sources":["images/points.svg","images/plus.svg","images/pencil.svg","images/cloud.svg","images/can.svg","redux/reduser.ts","components/CorrectWindow/CorrectWindow.tsx","components/GroupEventsButtons/GroupEventsButtons.tsx","components/UpdaterEvents/UpdaterEvents.tsx","images/logo.svg","images/arrow.svg","api.ts","App.tsx","redux/store.ts","index.tsx"],"names":["initialState","events","id","title","time","isPublished","visibleEvents","chosenEvent","chosenId","isChosenModePublish","nameOfTimezone","isAddDisabled","isAddForm","isCorrectForm","infoToCorrectForm","date","occasionReducer","createSlice","name","reducers","getVisibleOccasions","state","action","payload","setchosenOccasion","updateOcasions","removeOccasion","filter","occasion","toggleIsPublishedProperty","exactEvent","find","chooseIdOccasion","changeModePublishMenu","setTimezone","changeDisabledAdd","changeIsAddForm","changeIsCorrectForm","setInfoToForm","selectors","actions","reducer","CorrectWindow","idOfEvent","useSelector","loadedEvents","choosenToPublish","dispatch","useDispatch","handlerChangePublished","useCallback","chosenIdEvent","allEvents","newEventsToPrint","visEvent","correctEvent","infoToForm","slice","className","type","onClick","src","pencil","alt","cloud","can","GroupEventsButtons","isPublishList","nameTimezone","useState","countMenu","setCountMenu","prevChosenId","setPrevChosenId","useEffect","eventsToPrint","handlerPrintPublish","choiceOfPublic","eventsToPublic","handlerOpenMenu","count","prevChoice","oneEvent","openForm","classNames","disabled","plus","map","ellipsis","moment","tz","format","UpdaterEvents","descriptionEvent","setDescriptionEvent","dateEvent","setDateEvent","timeEvent","setTimeEvent","openCorrectForm","openAddForm","handlerSubmit","event","preventDefault","eventToCorrect","upgradedEvents","Date","valueOf","upEvent","closeForm","method","onSubmit","cols","rows","minLength","maxLength","placeholder","value","onChange","target","min","response","timezones","App","isChosen","setIsChosen","handlerHiddenSelector","handlerTimeZones","timeZone","picLogo","picArrow","elementOfResponse","hidden","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca4b0717.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/points.f2f4133e.svg\";","export default __webpack_public_path__ + \"static/media/plus.ca25056c.svg\";","export default __webpack_public_path__ + \"static/media/pencil.b7947a66.svg\";","export default __webpack_public_path__ + \"static/media/cloud.152768d7.svg\";","export default __webpack_public_path__ + \"static/media/can.d580c6b2.svg\";","import { createSlice } from '@reduxjs/toolkit';\nimport { Occasion } from '../OccasionType';\n\nconst eventsStart: Occasion[] = [\n  {\n    id: 0,\n    title: 'Lorem ipsum dolor sit amet asdfafd',\n    time: '2022-04-27T07:07:08.350Z',\n    isPublished: false,\n  },\n  {\n    id: 1,\n    title: 'Lorem ipsum dolor sit amet 2222',\n    time: '2022-06-27T10:07:09.350Z',\n    isPublished: false,\n  },\n  {\n    id: 2,\n    title: 'Lorem ipsum dolor sit amet 3333',\n    time: '2022-08-27T23:07:10.350Z',\n    isPublished: false,\n  },\n];\n\ninterface InitialState {\n  events: Occasion[],\n  visibleEvents: Occasion[] | [],\n  chosenEvent: Occasion | {},\n  chosenId: number,\n  isChosenModePublish: boolean,\n  nameOfTimezone: string,\n  isAddDisabled: boolean,\n  isAddForm: boolean,\n  isCorrectForm: boolean,\n  infoToCorrectForm: {\n    title: string,\n    date: string,\n    time: string,\n  },\n}\n\nconst initialState: InitialState = {\n  events: [...eventsStart],\n  visibleEvents: [],\n  chosenEvent: {},\n  chosenId: -1,\n  isChosenModePublish: false,\n  nameOfTimezone: 'UTC',\n  isAddDisabled: false,\n  isAddForm: false,\n  isCorrectForm: false,\n  infoToCorrectForm: {\n    title: '',\n    date: '',\n    time: '',\n  },\n};\n\nconst occasionReducer = createSlice({\n  name: 'occasion',\n  initialState,\n  reducers: {\n    getVisibleOccasions: (state, action) => {\n      return {\n        ...state,\n        visibleEvents: action.payload,\n      };\n    },\n\n    setchosenOccasion: (state, action) => {\n      return {\n        ...state,\n        chosenEvent: action.payload,\n      };\n    },\n\n    updateOcasions: (state, action) => {\n      return {\n        ...state,\n        events: action.payload,\n      };\n    },\n\n    removeOccasion: (state, action) => {\n      return {\n        ...state,\n        events: state.events.filter((occasion) => occasion.id !== action.payload),\n      };\n    },\n\n    toggleIsPublishedProperty: (state, action) => {\n      const exactEvent = state.events.find((occasion) => {\n        return occasion.id === action.payload;\n      });\n\n      if (exactEvent) {\n        exactEvent.isPublished = !exactEvent.isPublished;\n      }\n\n      return state;\n    },\n\n    chooseIdOccasion: (state, action) => {\n      return {\n        ...state,\n        chosenId: action.payload,\n      };\n    },\n\n    changeModePublishMenu: (state, action) => {\n      return {\n        ...state,\n        isChosenModePublish: action.payload,\n      };\n    },\n\n    setTimezone: (state, action) => {\n      return {\n        ...state,\n        nameOfTimezone: action.payload,\n      };\n    },\n\n    changeDisabledAdd: (state, action) => {\n      return {\n        ...state,\n        isAddDisabled: action.payload,\n      };\n    },\n\n    changeIsAddForm: (state, action) => {\n      return {\n        ...state,\n        isAddForm: action.payload,\n      };\n    },\n\n    changeIsCorrectForm: (state, action) => {\n      return {\n        ...state,\n        isCorrectForm: action.payload,\n      };\n    },\n\n    setInfoToForm: (state, action) => {\n      return {\n        ...state,\n        infoToCorrectForm: action.payload,\n      };\n    },\n  },\n});\n\nexport const selectors = {\n  loadedOccasions: (state: InitialState) => state.events,\n  getVisibleOccasons: (state: InitialState) => state.visibleEvents,\n  getChosenOccasion: (state: InitialState) => state.chosenEvent,\n  getChosenId: (state: InitialState) => state.chosenId,\n  getModePublishMenu: (state: InitialState) => state.isChosenModePublish,\n  getTimezone: (state: InitialState) => state.nameOfTimezone,\n  getIsDisabledAdd: (state: InitialState) => state.isAddDisabled,\n  getIsAddForm: (state: InitialState) => state.isAddForm,\n  getIsCorrectForm: (state: InitialState) => state.isCorrectForm,\n  getInfoToCorrect: (state: InitialState) => state.infoToCorrectForm,\n};\n\nexport const {\n  getVisibleOccasions,\n  setchosenOccasion,\n  updateOcasions,\n  removeOccasion,\n  chooseIdOccasion,\n  toggleIsPublishedProperty,\n  changeModePublishMenu,\n  setTimezone,\n  changeDisabledAdd,\n  changeIsAddForm,\n  changeIsCorrectForm,\n  setInfoToForm,\n} = occasionReducer.actions;\n\nexport const { reducer } = occasionReducer;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './CorrectWindow.scss';\nimport pencil from '../../images/pencil.svg';\nimport cloud from '../../images/cloud.svg';\nimport can from '../../images/can.svg';\nimport {\n  changeDisabledAdd,\n  changeIsCorrectForm,\n  chooseIdOccasion,\n  getVisibleOccasions,\n  selectors,\n  setInfoToForm,\n  toggleIsPublishedProperty,\n  updateOcasions,\n} from '../../redux/reduser';\n\nexport const CorrectWindow: React.FC = () => {\n  const idOfEvent = useSelector(selectors.getChosenId);\n  const loadedEvents = useSelector(selectors.loadedOccasions);\n  const choosenToPublish = useSelector(selectors.getModePublishMenu);\n  const chosenEvent = useSelector(selectors.getChosenOccasion);\n  const visibleEvents = useSelector(selectors.getVisibleOccasons);\n  const dispatch = useDispatch();\n\n  const handlerChangePublished = useCallback(() => {\n    const chosenIdEvent = idOfEvent;\n    const allEvents = loadedEvents;\n    const newEventsToPrint = visibleEvents.filter((visEvent) => visEvent.id !== chosenIdEvent);\n\n    dispatch(toggleIsPublishedProperty(chosenIdEvent));\n\n    dispatch(getVisibleOccasions(newEventsToPrint));\n    dispatch(updateOcasions(allEvents));\n    dispatch(toggleIsPublishedProperty(chosenIdEvent));\n    dispatch(chooseIdOccasion(-1));\n    dispatch(changeDisabledAdd(false));\n  }, [idOfEvent, loadedEvents, chosenEvent]);\n\n  const correctEvent = useCallback(() => {\n    if ('title' in chosenEvent) {\n      const infoToForm = {\n        title: chosenEvent.title,\n        date: chosenEvent.time.slice(0, 10),\n        time: chosenEvent.time.slice(11, 19),\n      };\n\n      dispatch(setInfoToForm(infoToForm));\n    }\n\n    dispatch(changeIsCorrectForm(true));\n    dispatch(chooseIdOccasion(-1));\n  }, [idOfEvent, loadedEvents, chosenEvent]);\n\n  return (\n    <div className=\"CorrectWindow__window-add\">\n      <button\n        type=\"button\"\n        className=\"CorrectWindow__window-section\"\n        onClick={correctEvent}\n      >\n        <img\n          src={pencil}\n          alt=\"pencil\"\n          className=\"CorrectWindow__correct-image\"\n        />\n        <p className=\"CorrectWindow__edit\">\n          Edit\n        </p>\n      </button>\n      <button\n        type=\"button\"\n        className=\"CorrectWindow__window-section\n        CorrectWindow__window-section-middle\"\n        onClick={handlerChangePublished}\n      >\n        <img\n          src={cloud}\n          alt=\"cloud of download\"\n          className=\"CorrectWindow__correct-image\"\n        />\n        <p className=\"CorrectWindow__edit\">\n          {choosenToPublish ? 'Unpublish' : 'Publish'}\n        </p>\n      </button>\n      <button\n        type=\"button\"\n        className=\"CorrectWindow__window-section\"\n      >\n        <img\n          src={can}\n          alt=\"garbage can\"\n          className=\"CorrectWindow__correct-image\"\n        />\n        <p\n          className=\"CorrectWindow__edit\n          CorrectWindow__edit-delete\"\n        >\n          Delete\n        </p>\n      </button>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment-timezone';\nimport './GroupEventsButtons.scss';\nimport ellipsis from '../../images/points.svg';\nimport plus from '../../images/plus.svg';\nimport { CorrectWindow } from '../CorrectWindow';\nimport {\n  changeDisabledAdd,\n  changeIsAddForm,\n  changeModePublishMenu,\n  chooseIdOccasion,\n  getVisibleOccasions,\n  selectors,\n  setchosenOccasion,\n} from '../../redux/reduser';\nimport { Occasion } from '../../OccasionType';\n\nexport const GroupEventsButtons: React.FC = () => {\n  const allEvents = useSelector(selectors.loadedOccasions);\n  const chosenId = useSelector(selectors.getChosenId);\n  const chosenEvent = useSelector(selectors.getChosenOccasion);\n  const visibleEvents = useSelector(selectors.getVisibleOccasons);\n  const isPublishList = useSelector(selectors.getModePublishMenu);\n  const nameTimezone = useSelector(selectors.getTimezone);\n  const isAddDisabled = useSelector(selectors.getIsDisabledAdd);\n  const dispatch = useDispatch();\n  const [countMenu, setCountMenu] = useState(0);\n  const [prevChosenId, setPrevChosenId] = useState(-2);\n  const format = 'hh:mm a - DD MMM YYYY';\n\n  useEffect(() => {\n    const eventsToPrint = allEvents\n      .filter((visEvent) => visEvent.isPublished === isPublishList);\n\n    dispatch(getVisibleOccasions(eventsToPrint));\n  }, []);\n\n  const handlerPrintPublish = useCallback(() => {\n    const choiceOfPublic = isPublishList;\n    const eventsToPublic = allEvents\n      .filter((visEvent) => visEvent.isPublished === !choiceOfPublic);\n\n    dispatch(changeModePublishMenu(!choiceOfPublic));\n    dispatch(getVisibleOccasions(eventsToPublic));\n    setCountMenu(0);\n  }, [isPublishList, allEvents]);\n\n  const handlerOpenMenu = useCallback((idOfEvent: number) => {\n    const loadedEvents = allEvents;\n    const count = countMenu;\n    const prevChoice = prevChosenId;\n\n    const exactEvent = loadedEvents\n      .find((oneEvent) => oneEvent.id === idOfEvent);\n\n    if (count === 1 && prevChoice === idOfEvent) {\n      setCountMenu(0);\n      dispatch(changeDisabledAdd(false));\n    } else {\n      setCountMenu(1);\n      dispatch(changeDisabledAdd(true));\n    }\n\n    if (exactEvent) {\n      if (exactEvent.isPublished) {\n        dispatch(changeModePublishMenu(true));\n      } else {\n        dispatch(changeModePublishMenu(false));\n      }\n    }\n\n    dispatch(chooseIdOccasion(idOfEvent));\n    dispatch(setchosenOccasion(exactEvent));\n    setPrevChosenId(idOfEvent);\n  }, [chosenEvent, countMenu, prevChosenId, allEvents]);\n\n  const openForm = useCallback(() => {\n    dispatch(changeIsAddForm(true));\n    dispatch(changeDisabledAdd(true));\n  }, [isAddDisabled]);\n\n  return (\n    <div className=\"GroupEventsButtons\">\n      <div className=\"GroupEventsButtons__visibility\">\n        <div className=\"GroupEventsButtons__published\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'GroupEventsButtons__switch-button',\n              {\n                'GroupEventsButtons__switch-button-isActive': isPublishList,\n              },\n            )}\n            onClick={handlerPrintPublish}\n          >\n            Published\n          </button>\n        </div>\n        <div className=\"GroupEventsButtons__unpublished\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'GroupEventsButtons__switch-button',\n              {\n                'GroupEventsButtons__switch-button-isActive': !isPublishList,\n              },\n            )}\n            onClick={handlerPrintPublish}\n          >\n            Unpublished\n          </button>\n        </div>\n      </div>\n      <button\n        className={classNames(\n          'GroupEventsButtons__add-button',\n          {\n            'GroupEventsButtons__add-button--disabled': isAddDisabled,\n          },\n        )}\n        type=\"button\"\n        disabled={isAddDisabled}\n        onClick={openForm}\n      >\n        <img src={plus} alt=\"plus\" className=\"GroupEventsButtons__plus\" />\n        Add Event\n      </button>\n\n      <ul className=\"GroupEventsButtons__list\">\n        {visibleEvents.map((oneEvent: Occasion) => (\n          <li\n            className=\"GroupEventsButtons__item\"\n            key={oneEvent.id}\n          >\n            <div className=\"GroupEventsButtons__item-main\">\n              <p className=\"GroupEventsButtons__item-text\">\n                {oneEvent.title}\n              </p>\n              <div className=\"GroupEventsButtons__bottomGroup\">\n                <button\n                  className=\"GroupEventsButtons__points\"\n                  type=\"button\"\n                  title=\"opener dicription of event\"\n                  onClick={() => handlerOpenMenu(oneEvent.id)}\n                >\n                  <img\n                    src={ellipsis}\n                    alt=\"sign to select discription of event\"\n                    className=\"GroupEventsButtons__point\"\n                  />\n                </button>\n                <p className=\"GroupEventsButtons__time\">\n                  {moment(`${oneEvent.time}`, 'YYYY-MM-DDTHH:mm.ss.350Z')\n                    .tz(`${nameTimezone}`).format(`${format}`)}\n                </p>\n              </div>\n            </div>\n            {(chosenId === oneEvent.id)\n              && countMenu === 1\n              && (\n                <CorrectWindow />\n              )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { SyntheticEvent, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment-timezone';\nimport {\n  changeDisabledAdd,\n  changeIsAddForm,\n  changeIsCorrectForm,\n  changeModePublishMenu,\n  getVisibleOccasions,\n  selectors,\n  updateOcasions,\n} from '../../redux/reduser';\nimport './UpdaterEvents.scss';\nimport { Occasion } from '../../OccasionType';\n\nexport const UpdaterEvents: React.FC = () => {\n  const allEvents = useSelector(selectors.loadedOccasions);\n  const infoToCorrectForm = useSelector(selectors.getInfoToCorrect);\n  const [descriptionEvent, setDescriptionEvent] = useState(infoToCorrectForm.title);\n  const [dateEvent, setDateEvent] = useState(infoToCorrectForm.date);\n  const [timeEvent, setTimeEvent] = useState(infoToCorrectForm.time);\n  const openCorrectForm = useSelector(selectors.getIsCorrectForm);\n  const openAddForm = useSelector(selectors.getIsAddForm);\n  const chosenEvent = useSelector(selectors.getChosenOccasion);\n  const nameTimezone = useSelector(selectors.getTimezone);\n  const dispatch = useDispatch();\n\n  const handlerSubmit = useCallback((event: SyntheticEvent) => {\n    event.preventDefault();\n    const eventToCorrect = chosenEvent;\n    let upgradedEvents: Occasion[] = [];\n\n    if (openCorrectForm\n      && 'title' in eventToCorrect\n    ) {\n      upgradedEvents = [\n        {\n          id: eventToCorrect.id,\n          title: descriptionEvent,\n          time: moment(`${dateEvent}T${timeEvent}z`, 'YYYY-MM-DDTHH:mm.ss.350Z')\n            .tz(`${nameTimezone}`).format('YYYY-MM-DDTHH:mm.ss.350Z'),\n          isPublished: false,\n        },\n        ...allEvents.filter((oneEvent) => oneEvent.id !== eventToCorrect.id),\n      ];\n    }\n\n    if (openAddForm) {\n      upgradedEvents = [\n        {\n          id: new Date().valueOf(),\n          title: descriptionEvent,\n          time: moment(`${dateEvent}T${timeEvent}z`, 'YYYY-MM-DDTHH:mm.ss.350Z')\n            .tz(`${nameTimezone}`).format('YYYY-MM-DDTHH:mm.ss.350Z'),\n          isPublished: false,\n        },\n        ...allEvents,\n      ];\n    }\n\n    const visibleEvents = upgradedEvents.filter((upEvent) => upEvent.isPublished === false);\n\n    dispatch(updateOcasions(upgradedEvents));\n    dispatch(changeModePublishMenu(false));\n    dispatch(getVisibleOccasions(visibleEvents));\n\n    dispatch(changeIsAddForm(false));\n    dispatch(changeIsCorrectForm(false));\n    dispatch(changeDisabledAdd(false));\n  }, [descriptionEvent, dateEvent, timeEvent, allEvents]);\n\n  const closeForm = useCallback(() => {\n    dispatch(changeIsAddForm(false));\n    dispatch(changeIsCorrectForm(false));\n    dispatch(changeDisabledAdd(false));\n  }, []);\n\n  return (\n    <div className=\"UpdaterEvents\">\n      <div className=\"UpdaterEvents__container\">\n        <button\n          className=\"UpdaterEvents__close-form\"\n          type=\"button\"\n          onClick={closeForm}\n        >\n          X\n        </button>\n        <h1 className=\"UpdaterEvents__title\">\n          Fill the form\n        </h1>\n        <form\n          method=\"POST\"\n          className=\"UpdaterEvents__form\"\n          onSubmit={(event) => handlerSubmit(event)}\n        >\n          <div className=\"UpdaterEvents__groupe-fields\">\n            <div className=\"UpdaterEvents__field\">\n              <p className=\"UpdaterEvents__name-title\">\n                Input description:\n              </p>\n              <textarea\n                className=\"UpdaterEvents__discription\"\n                cols={30}\n                rows={2}\n                minLength={3}\n                maxLength={80}\n                name=\"desc\"\n                placeholder=\"...\"\n                value={descriptionEvent}\n                onChange={(event) => setDescriptionEvent(event.target.value)}\n              />\n            </div>\n            <div className=\"UpdaterEvents__field\">\n              <p className=\"UpdaterEvents__name-title\">\n                Choose a date:\n              </p>\n              <input\n                type=\"date\"\n                className=\"UpdaterEvents__date\"\n                min=\"2022-01-01\"\n                value={dateEvent}\n                onChange={(event) => setDateEvent(event.target.value)}\n              />\n            </div>\n\n            <div className=\"UpdaterEvents__field\">\n              <p className=\"UpdaterEvents__name-title\">\n                Choose time:\n              </p>\n              <input\n                type=\"time\"\n                className=\"UpdaterEvents__time\"\n                value={timeEvent}\n                onChange={(event) => setTimeEvent(event.target.value)}\n              />\n            </div>\n\n          </div>\n          <button\n            type=\"submit\"\n            className={classNames(\n              'UpdaterEvents__button-add',\n              {\n                'UpdaterEvents__button-add--passive': false,\n              },\n            )}\n          >\n            {openCorrectForm ? 'Correct the event' : 'Add a new event'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.80032a17.svg\";","export default __webpack_public_path__ + \"static/media/arrow.24e95959.svg\";","import { timezones } from './timeZones.json';\n\nexport const response = timezones;\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GroupEventsButtons } from './components/GroupEventsButtons';\nimport { UpdaterEvents } from './components/UpdaterEvents';\nimport picLogo from './images/logo.svg';\nimport picArrow from './images/arrow.svg';\nimport { response } from './api';\nimport { selectors, setTimezone } from './redux/reduser';\n\nexport const App: React.FC = () => {\n  const nameTimezone = useSelector(selectors.getTimezone);\n  const allEvents = useSelector(selectors.loadedOccasions);\n  const openAddForm = useSelector(selectors.getIsAddForm);\n  const openCorrectForm = useSelector(selectors.getIsCorrectForm);\n  const [isChosen, setIsChosen] = useState(true);\n  const dispatch = useDispatch();\n\n  const handlerHiddenSelector = useCallback(() => {\n    const openSelector = isChosen;\n\n    setIsChosen(!openSelector);\n  }, [isChosen, allEvents]);\n\n  const handlerTimeZones = useCallback((timeZone) => {\n    dispatch(setTimezone(timeZone));\n    setIsChosen(true);\n  }, [nameTimezone, allEvents]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__container-out\">\n        <h1 className=\"App__title\">\n          Event Manager\n        </h1>\n        <div className=\"App__container-in\">\n          <div className=\"App__logo\">\n            <img src={picLogo} alt=\"logo\" className=\"App__logo-image\" />\n            <p className=\"App__logo-text\">\n              Select Timezone\n            </p>\n          </div>\n          <div className=\"App__selector\">\n            <div className=\"App__selector-container\">\n              <button\n                className=\"App__choice\"\n                type=\"button\"\n                onClick={handlerHiddenSelector}\n              >\n                <img src={picArrow} alt=\"pointer on select\" className=\"App__choice-image\" />\n                {nameTimezone}\n              </button>\n              {response.map((elementOfResponse) => (\n                <button\n                  className=\"App__choice\"\n                  type=\"button\"\n                  key={elementOfResponse.id}\n                  hidden={isChosen}\n                  onClick={() => handlerTimeZones(elementOfResponse.value)}\n                >\n                  {elementOfResponse.value}\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n      <GroupEventsButtons />\n      {openAddForm && <UpdaterEvents />}\n      {openCorrectForm && <UpdaterEvents />}\n    </div>\n  );\n};\n","import { configureStore } from '@reduxjs/toolkit';\nimport { reducer } from './reduser';\n\nconst store = configureStore({ reducer });\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './styles/main.scss';\nimport { App } from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}